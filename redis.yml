---
- name: "Create security group"
  hosts: localhost
  connection: local
  tasks:
    - name: "Security group name {{ security_group }}"
      local_action:
        module: ec2_group
        name: "{{ security_group }}"
        description: "Redis security group"
        region: "{{ stack_region }}"
        state: present
        rules:
          - to_port: 22
            from_port: 22
            cidr_ip: 0.0.0.0/0
            proto: tcp
          - to_port: "{{ port_redis }}"
            from_port: "{{ port_redis }}"
            cidr_ip: 0.0.0.0/0
            proto: tcp
        rules_egress:
          - cidr_ip: 0.0.0.0/0
            proto: all

    - name: "Create keypair"
      ec2_key:
        name: "{{ key_pem_name }}"
        region: "{{ stack_region }}"
      register: mykey

    - name: write to file
      copy: content="{{ mykey.key.private_key }}" dest="~/.ssh/wf-fr-test.pem" mode=0600
      when: mykey.changed

- name: "Add key"
  hosts: localhost
  connection: local
  tasks:
    - shell: ssh-add ~/.ssh/wf-fr-test.pem

- name: "Initiate creation of EC2 Redis instances"
  hosts: localhost
  tasks:
    - name: Create EC2 instances
      local_action:
        module: ec2
        key_name: "{{ key_pem_name }}"
        group: "{{ security_group }}"
        instance_type: "{{ type_of_instance }}"
        image: "{{ aws_image }}"
        region: "{{ stack_region }}"
        wait: yes
        exact_count: "{{ number_of_servers }}"
        count_tag:
          Name: "test"
        instance_tags:
          Name: "test"
      register: ec2

    - name: Add new instance to host group public
      add_host: hostname={{ item.public_ip }} groupname=ins_started
      with_items: '{{ec2.instances}}'

    - name: Add new instance to host group private
      add_host: hostname={{ item.private_ip }} groupname=ins_started_priv
      with_items: '{{ec2.instances}}'

    - name: Wait for SSH to come up
      wait_for: host={{ item.public_dns_name }} port=22 delay=60 timeout=320 state=started
      with_items: '{{ec2.instances}}'

- name: "Install Redis Master"
  hosts: ins_started[0]
  user: "{{ aws_user }}"
  sudo: yes
  gather_facts: true
  roles:
    - { role: redis-master }

- name: "Install Redis Slaves"
  hosts: ins_started[1:]
  user: "{{ aws_user }}"
  sudo: yes
  gather_facts: true
  vars:
    master_ip: "{{ groups['ins_started_priv'][0] }}"
  roles:
    - { role: redis-slave }
